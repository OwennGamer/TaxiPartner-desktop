plugins {
  id 'java'
  id 'application'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink'           version '2.25.0'
  id 'org.jetbrains.kotlin.jvm'
}

group = 'com.partnertaxi'
version = '1.0-SNAPSHOT'  // zostawiamy SNAPSHOT dla developmentu

repositories {
  mavenCentral()
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(17))
  }
}

application {
  mainModule = 'com.partnertaxi.taxipartneradmin'
  mainClass  = 'com.partnertaxi.taxipartneradmin.HelloApplication'
}

javafx {
  version = '20'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  // JUnit for testing
  testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.2")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.2")
  testImplementation("org.testfx:testfx-junit5:4.0.16-alpha")
  testImplementation("org.testfx:openjfx-monocle:8u76-b04")

  implementation files("libs/mysql-connector-j-9.1.0.jar")
  implementation "com.squareup.okhttp3:okhttp:4.10.0"
  implementation "com.google.code.gson:gson:2.8.9"
  implementation "mysql:mysql-connector-java:8.0.33"
  implementation "org.json:json:20230227"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

test {
  useJUnitPlatform()
}

jlink {
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--add-modules', 'jdk.localedata', '--include-locales', 'pl']
  launcher {
    name = 'app'
  }
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")

  jpackage {
    // nadpisujemy wersję dla instalatora na prostą, numeryczną
    appVersion     = '1.0'
    // zmieniono typ na MSI, ponieważ EXE nie jest wspierane
    installerType  = 'msi'
    installerOptions = [
            '--vendor',      'PartnerTaxi',
            '--win-shortcut',
            '--icon',        "$projectDir/src/main/resources/test.ico"
    ]
    // (opcjonalnie) katalog wyjściowy dla .msi:
    // installerOutputDir = file("$buildDir/installer")
  }
}
