plugins {
  id 'java'
  id 'application'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.jetbrains.kotlin.jvm' version '2.0.0'
  id 'org.beryx.jlink'           version '2.25.0'
}

group = 'com.partnertaxi'
version = '1.0.0'   // numer wersji instalatora (zmieniaj przy kolejnych wydaniach)

repositories {
  mavenCentral()
}

java {
  toolchain {
    languageVersion.set(JavaLanguageVersion.of(17))
  }
}

application {
  mainModule = 'com.partnertaxi.taxipartneradmin'
  mainClass  = 'com.partnertaxi.taxipartneradmin.HelloApplication'
}

javafx {
  version = '20'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  // JUnit for testing
  testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.2")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.2")
  testImplementation("org.testfx:testfx-junit5:4.0.16-alpha")
  testImplementation("org.testfx:openjfx-monocle:8u76-b04")

  implementation "com.squareup.okhttp3:okhttp:4.10.0"
  testImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"
  implementation "com.google.code.gson:gson:2.8.9"
  implementation "mysql:mysql-connector-java:8.0.33"
  implementation "org.json:json:20230227"
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

// (opcjonalnie, ale zalecane przy Kotlinie)
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
  kotlinOptions {
    jvmTarget = '17'
  }
}

test {
  useJUnitPlatform()
}

jlink {
  // Mniejszy runtime:
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

  // Dołącz dodatkowe zależności (pomaga przy Kotlin/JavaFX w obrazie runtime):
  addExtraDependencies('kotlin', 'javafx')

  // Nazwa launchera (EXE) i wpisu w menu Start:
  launcher {
    name = 'Partner Taxi'
  }

  // --- jpackage (instalator MSI) ---
  jpackage {
    imageName     = 'Partner Taxi'        // nazwa obrazu aplikacji
    appVersion    = project.version       // wersja w MSI
    installerName = 'Partner Taxi'        // nazwa pliku .msi
    installerType = 'msi'

    // Ikona Windows (.ico). U Ciebie jest w resources:
    icon = file('src/main/resources/icons/partner-taxi.ico').absolutePath

    // Windows extras:
    winShortcut = true

    // Dodatkowe opcje instalatora:
    installerOptions += [
            '--win-dir-chooser',
            '--win-menu-group', 'Partner Taxi',
            '--vendor', 'Partner Taxi',
            '--description', 'Aplikacja desktopowa Partner Taxi (JavaFX).',
            '--win-menu'
    ]
  }
}
